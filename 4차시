print(4 / 3)

print(1 / 2)

print(4 / 2)

print(7 // 3)

print(7 % 3)

print(7 ** 3)
________________________________________
quotient, remainder = divmod(5, 2)
print(quotient, remainder)
________________________________________
a = 11 + 2
b = 12 - 2
c = 13 * 2
d = 14 / 2
e = 15 ** 2
f = 16 // 2
g = 17 % 3

print(a, b, c, d, e, f, )
________________________________________
a = 10 
b = 3 
print("10 == 3 =>", a == b) 
print("10 != 3 =>", a != b) 
print("10 > 3 =>", a > b) 
print("10 >= 3 =>", a >= b) 
print("10 < 3 =>", a < b) 
print("10 <= 3 =>", a <= b) 
print()
________________________________________
a = 13
print(bin(a))
print(hex(a))
________________________________________
a = 12
b = 8
print(bin(a))
print(bin(b))
print(bin(a&b))
print('')
print(a&b)

print('')
print(bin(a))
print(bin(b))
print(bin(a|b))
print('')
print(a|b)

print('')
print(bin(a))
print(bin(b))
print(bin(a|b))
print('')
print(a^b)

print('')
print(bin(a))
print(bin(~a))
________________________________________
>>> bin(0b1101 & 0b1001)   # 비트 AND
'0b1001'
>>> 13 & 9                 # 비트 AND
9
>>> bin(0b1101 | 0b1001)   # 비트 OR
'0b1101'
>>> 13 | 9                 # 비트 OR
13
	>>> bin(0b1101 ^ 0b1001)   # 비트 XOR
'0b100'
>>> 13 ^ 9                 # 비트 XOR
4                 
>>> bin(~0b1101)           # 비트 NOT
'-0b1110'
>>> ~13                    # 비트 NOT
-14
